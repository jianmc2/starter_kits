name: Prem Solution

on:
  # fork:
  #   branches: [ "3.7" ]
  push:
    branches: [ "3.7" ]
  pull_request:
    branches: [ "3.7" ]

jobs:

  build:

    runs-on: self-hosted
    outputs: 
      schemas: ${{ steps.step1.outputs.schemas }}
      queries: ${{ steps.step1.outputs.queries}}
      jobs: ${{ steps.step1.outputs.jobs }}
    name: Test changed-files
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # - name: Start TG
    #   run: gadmin start all
    # - name: Reset Graph
    #   run: gsql 'DROP ALL'
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v24
      with:
        dir_names: "true"
    - id: step1
      name: List all changed files
      run: |
        pathArr=()
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          if ! [[ ${pathArr[*]} =~ "`dirname $file`" ]]; then
              pathArr+=(`dirname $file`)
          fi
        done
        # paths=()
        # for value in "${pathArr[@]}"
        # do
        #     # for FILE in "$value/schemas"/*; do paths+=("$FILE"); done
        #     for FILE1 in "$value/queries"/* 
        #     do 
        #       echo $FILE1
        #       paths+=("$FILE1")
        #     done
        #     for FILE2 in "$value/jobs"/*; do paths+=("$FILE2"); done
        # done
        for value in "${pathArr[@]}"
        do
          schemas=$(find $value/schemas -name '*.gsql')
          echo "$schemas" | \
          jq --slurp --raw-input 'split("\n")[:-1]' | \
          jq  "{\"filepath\": .[] }" | \
          jq -sc "{ \"include\": . }" > tmp
          cat ./tmp
          matrixStringifiedObject=$(cat ./tmp)
          echo "::set-output name=schemas::$matrixStringifiedObject"

          queries=$(find $value/queries -name '*.gsql')
          echo "$queries" | \
          jq --slurp --raw-input 'split("\n")[:-1]' | \
          jq  "{\"filepath\": .[] }" | \
          jq -sc "{ \"include\": . }" > tmp
          cat ./tmp
          matrixStringifiedObject=$(cat ./tmp)
          echo "::set-output name=queries::$matrixStringifiedObject"        
          
          jobs=$(find $value/jobs -name '*.gsql')
          echo "$jobs" | \
          jq --slurp --raw-input 'split("\n")[:-1]' | \
          jq  "{\"filepath\": .[] }" | \
          jq -sc "{ \"include\": . }" > tmp
          cat ./tmp
          matrixStringifiedObject=$(cat ./tmp)
          echo "::set-output name=jobs::$matrixStringifiedObject"

        done

    # - name: Run Graph Installations 
    #   # shell: gsql {0}
    #   run: |
    #     for value in "${pathArr[@]}"
    #     do
    #         $echo value
    #         # for FILE in "$value/schemas"/*; do @$FILE; done
    #         # USE GRAPH MyGraph
    #         # for FILE in "$value/queries"/* 
    #         # do 
    #         #   @$FILE
    #         # done
    #         # for FILE in "$value/jobs"/*; do @$FILE; done
    #         # gsql 'DROP ALL'
    #     done
  gsql: 
    runs-on: self-hosted
    needs: build
    strategy:
      matrix: ${{fromJson(needs.build.outputs.schemas)}}
    steps:
    # - name: test
    #   shell: gsql {0}
    #   run: |
    #     USE GRAPH MyGraph
    #     @${{ schemas.filepath }}
    - name: idek
      run: |
        testVar=${{fromJson(needs.build.outputs.queries)}}
        for value in "${testVar[@]}"
        do
          echo "$value" | jq -r '.filepath'
        done

